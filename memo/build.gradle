apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: "kotlin-kapt"
//apply plugin: "io.fabric"
//apply plugin: 'com.google.gms.google-services'
//apply from:rootProject.file('gradle/shared_dependencies.gradle')
//apply from:rootProject.file('gradle/core_modules.gradle')


android {
    compileSdkVersion compileSdk_version
    buildToolsVersion buildTools_version

    /**
     * defaultConfig
     *      ビルドバリアントのデフォルト設定とエントリをカプセル化し、
     *      ビルドシステムによって、main / AndroidManifest.xmlの属性を、動的にオーバーライド。
     *
     *      各ビルドタイプで、オーバーライドするようにプロダクトフレーバーを構成できる。
     */
    defaultConfig {
        applicationId package_name
        minSdkVersion minSdk_version
        targetSdkVersion targetSdk_version
        versionCode version_code
        versionName version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }


    //ビルドタイプ
    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug
            versionNameSuffix '-debug'
            applicationIdSuffix '.debug'
        }

        release {
            minifyEnabled false
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding {
        enabled = true
    }

}


// --------------------------------------------------
//  Projectのgradleに定義したextのバージョンを
//  Project Structureで、更新できるように一覧
//  （「shared_dependencies.gradle」で管理すると、自動アップデートができないので）
//  バージョンをあげるときは、この「app」のdependenciesの参照しているextを更新すること
// --------------------------------------------------
dependencies {
//    implementation project(':core_design')  //TODO：　AARを追加したら、ここに書くこと！

    implementation fileTree(dir: 'libs', include: ['*.jar'])    // libs フォルダ直下の jar ファイルをコンパイル

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "androidx.legacy:legacy-support-v4:$androidx_legacy_version"

    //AndroidX
    implementation "androidx.appcompat:appcompat:$appCompat_version"
    implementation "androidx.core:core-ktx:$core_ktx_version"

    //lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //design
    implementation "androidx.recyclerview:recyclerview:$recycler_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"

    //これいる？
    implementation 'app.raybritton.tokenstorage:room:0.7.1'
    implementation 'app.raybritton.tokenstorage:room:0.7.1'

    // Kotlin
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.recyclerview:recyclerview:$recycler_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout_version"

    //Log
//    compile "com.jakewharton.timber:timber:$timber_version"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    //WorkManager
    implementation "androidx.work:work-runtime-ktx:$work_version"

    //Paging
    implementation "androidx.paging:paging-runtime:$paging_version"


    //by databinding
    implementation "com.github.wada811:DataBinding-ktx:$databinding_ktx"

    // Dagger2
    implementation "com.google.dagger:dagger:$dagger2_version"
    implementation "com.google.dagger:dagger-android:$dagger2_version"
    implementation "com.google.dagger:dagger-android-support:$dagger2_version"
    implementation "com.squareup.inject:assisted-inject-annotations-dagger2:$dagger2annotations_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger2_version"
    kapt "com.google.dagger:dagger-compiler:$dagger2_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger2_version"
    kaptTest "com.google.dagger:dagger-compiler:$dagger2_version"


    // retrofit & Gson
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"     //OKHttp
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Gson
    implementation "com.google.code.gson:gson:$gson_version"
    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"

    // Rx
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxjava_kotlin_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_android_version"


//    // Google
//    implementation "com.google.android.gms:play-services-auth:$gcm_version"
//    implementation "com.google.android.gms:play-services-gcm:$gcm_version"
//    implementation "com.google.android.gms:play-services-analytics:$gcm_version"
//
//    // Firebase
//    implementation platform('com.google.firebase:firebase-bom:17.0.0')
//
//    implementation 'com.google.firebase:firebase-database'
//    implementation 'com.google.firebase:firebase-storage'
//    implementation 'com.google.firebase:firebase-auth'
//
//    // Firebase UI
//    implementation 'com.firebaseui:firebase-ui-database:4.2.0'

    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation "androidx.test:rules:$test_rules_version"
    androidTestImplementation "androidx.test:runner:$test_runner_version"
    androidTestImplementation 'androidx.work:work-testing:2.4.0-beta01'
    testImplementation "junit:junit:$test_junit_version"

    testImplementation "io.mockk:mockk:$mockk_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.google.truth:truth:$truth_version"
    testImplementation "androidx.test:core:$androidxTest_version"
    testImplementation "androidx.test.ext:junit:$junit_version"
    testImplementation "androidx.test.espresso:espresso-core:$espresso_version"
}


//Firebase用（末尾に追加）
//apply plugin: 'com.google.gms.google-services'

